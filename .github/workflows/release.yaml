name: Build and Release Go CLI Tool for Multiple Platforms

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - { os: "linux", goos: "linux", goarch: "amd64", ext: "" }
          - { os: "macos", goos: "darwin", goarch: "amd64", ext: "" }
          - { os: "macos-arm64", goos: "darwin", goarch: "arm64", ext: "" }
          - { os: "windows", goos: "windows", goarch: "amd64", ext: ".exe" }
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build Binary for ${{ matrix.platform.os }}
        env:
          GOOS: ${{ matrix.platform.goos }}
          GOARCH: ${{ matrix.platform.goarch }}
          VERSION: ${{ github.ref_name }}
        run: |
          go build -ldflags "-X dt-geo-converter/cmd.Version=$VERSION" -o dt-geo-converter-${{ matrix.platform.os }}${{ matrix.platform.ext }} .

      - name: Upload Artifact for ${{ matrix.platform.os }}
        uses: actions/upload-artifact@v4
        with:
          name: dt-geo-converter-${{ matrix.platform.os }}
          path: dt-geo-converter-${{ matrix.platform.os }}${{ matrix.platform.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Create GitHub Release and Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "${{ github.ref_name }}"
          files: |
            dt-geo-converter-linux/dt-geo-converter-linux
            dt-geo-converter-macos/dt-geo-converter-macos
            dt-geo-converter-macos-arm64/dt-geo-converter-macos-arm64
            dt-geo-converter-windows/dt-geo-converter-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
